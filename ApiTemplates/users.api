#namespace Users
#description Provides a set of methods for the wrapper of GET/POST users.

endpoint Listed<User> Contributees : Get users/contributees
{
	description
	{
		Returns a collection of users that the specified user can "contribute" to.
	}
	returns
	{
		The users.
	}
	params
	{
		either long user_id
		either string screen_name
		optional bool include_entities
		optional bool skip_status
	}
}

endpoint Listed<User> Contributors : Get users/contributors
{
	description
	{
		Returns a collection of users who can contribute to the specified account.
	}
	returns
	{
		The users.
	}
	params
	{
		either long user_id
		either string screen_name
		optional bool include_entities
		optional bool skip_status
	}
}

endpoint Listed<User> Lookup : Get users/lookup
{
	description
	{
		Returns fully-hydrated user objects for up to 100 users per request, as specified by comma-separated values passed to the user_id and/or screen_name parameters.
        This method is especially useful when used in conjunction with collections of user IDs returned from GET friends/ids and GET followers/ids.
        GET users/show is used to retrieve a single user object.
	}
	returns
	{
		The users.
	}
	params
	{
		either IEnumerable<long> user_id
		either IEnumerable<string> screen_name
	}
}

endpoint ProfileBannerSizes ProfileBanner : Get users/profile_banner
{
	description
	{
		Returns the size of the specified user's profile banner.
        If the user has not uploaded a profile banner, a HTTP 404 will be served instead.
        This method can be used instead of string manipulation on the profile_banner_url returned in user objects as described in User Profile Images and Banners.
	}
	returns
	{
		The sizes.
	}
	params
	{
		either long user_id
		either string screen_name
	}
}

endpoint Listed<User> Search : Get users/search
{
	description
	{
		Provides a simple, relevance-based search interface to public user accounts on Twitter.
        Try querying by topical interest, full name, company name, location, or other criteria.
		Exact match searches are not supported.
	}
	returns
	{
		The users.
	}
	params
	{
		required string q
		optional int page
		optional int count
		optional bool include_entities
	}
}

endpoint UserResponse Show : Get users/show
{
	description
	{
		Returns a variety of information about the user specified by the required user_id or screen_name parameter.
        The author's most recent Tweet will be returned inline when possible.
        GET users/lookup is used to retrieve a bulk collection of user objects.
	}
	returns
	{
		The user.
	}
	params
	{
		either long user_id
		either string screen_name
		optional bool include_entities
	}
}

endpoint Listed<Category> Suggestions : Get users/suggestions
{
	description
	{
		Access to Twitter's suggested user list.
        This returns the list of suggested user categories.
        The category can be used in GET users/suggestions/:slug to get the users in that category.
	}
	returns
	{
		The categories.
	}
	params
	{
		optional string lang
	}
}

endpoint CategoryResponse Suggestion : Get users/suggestions/{slug}
{
	description
	{
		Access the users in a given category of the Twitter suggested user list.
        It is recommended that applications cache this data for no more than one hour.
	}
	returns
	{
		The category.
	}
	params
	{
		required string slug
		optional string lang
	}
}

endpoint Listed<User> SuggestedMembers : Get users/suggestions/{slug}/members
{
	description
	{
		Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user.
	}
	returns
	{
		The users.
	}
	params
	{
		required string slug
	}
}

endpoint UserResponse ReportSpam : Post users/report_spam
{
	description
	{
		Report the specified user as a spam account to Twitter.
        Additionally performs the equivalent of POST blocks/create on behalf of the authenticated user.
        Note: One of these parameters must be provided.
	}
	returns
	{
		The user.
	}
	params
	{
		either string screen_name
		either long user_id
	}
}
